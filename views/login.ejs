<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Build-IT - Login</title>
  <style>
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }
    
    body {
      min-height: 100vh;
      display: flex;
      align-items: center;
      justify-content: center;
      color: #fff;
      position: relative;
      overflow: hidden;
      background-color: #0a0a0a;
    }
    
    /* Enhanced background with animated gradient */
    body::before {
      content: "";
      position: absolute;
      top: -50%;
      left: -50%;
      width: 200%;
      height: 200%;
      background: 
        radial-gradient(circle at 30% 40%, rgba(128, 0, 255, 0.15) 0%, transparent 30%),
        radial-gradient(circle at 70% 60%, rgba(76, 29, 149, 0.2) 0%, transparent 40%),
        radial-gradient(circle at 50% 50%, rgba(30, 30, 30, 0.9) 0%, rgba(10, 10, 10, 1) 100%);
      z-index: -2;
      
    }
    
    /* Subtle animated particles */
    body::after {
      content: "";
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background-image: 
        radial-gradient(circle at 10% 10%, rgba(168, 85, 247, 0.05) 0%, transparent 0.5%),
        radial-gradient(circle at 20% 30%, rgba(168, 85, 247, 0.05) 0%, transparent 0.5%),
        radial-gradient(circle at 30% 70%, rgba(168, 85, 247, 0.05) 0%, transparent 0.5%),
        radial-gradient(circle at 40% 40%, rgba(168, 85, 247, 0.05) 0%, transparent 0.5%),
        radial-gradient(circle at 50% 90%, rgba(168, 85, 247, 0.05) 0%, transparent 0.5%),
        radial-gradient(circle at 60% 20%, rgba(168, 85, 247, 0.05) 0%, transparent 0.5%),
        radial-gradient(circle at 70% 60%, rgba(168, 85, 247, 0.05) 0%, transparent 0.5%),
        radial-gradient(circle at 80% 80%, rgba(168, 85, 247, 0.05) 0%, transparent 0.5%),
        radial-gradient(circle at 90% 50%, rgba(168, 85, 247, 0.05) 0%, transparent 0.5%);
      background-size: 150% 150%;
      z-index: -1;
      opacity: 0.8;
      animation: particleAnimation 15s ease-in-out infinite alternate;
    }
    
    @keyframes gradientAnimation {
      0% {
        transform: rotate(0deg);
      }
      100% {
        transform: rotate(360deg);
      }
    }
    
    @keyframes particleAnimation {
      0% {
        background-position: 0% 0%;
      }
      100% {
        background-position: 100% 100%;
      }
    }
    
    .form-container {
      background: rgba(20, 20, 20, 0.85);
      border-radius: 16px;
      padding: 2.5rem;
      width: 90%;
      max-width: 400px;
      box-shadow: 
        0 8px 32px rgba(128, 0, 255, 0.2),
        0 0 0 1px rgba(128, 0, 255, 0.1),
        inset 0 0 32px rgba(128, 0, 255, 0.05);
      backdrop-filter: blur(12px);
      position: relative;
      z-index: 1;
      overflow: hidden;
    }
    
    /* Subtle glow effect on the form container */
    .form-container::before {
      content: "";
      position: absolute;
      top: -50%;
      left: -50%;
      width: 200%;
      height: 200%;
      background: radial-gradient(circle at center, rgba(168, 85, 247, 0.1) 0%, transparent 70%);
      z-index: -1;
      animation: pulseGlow 6s ease-in-out infinite;
    }
    
    @keyframes pulseGlow {
      0%, 100% {
        opacity: 0.5;
      }
      50% {
        opacity: 0.8;
      }
    }
    
    .title {
      font-size: 2rem;
      font-weight: 700;
      text-align: center;
      margin-bottom: 1.5rem;
      color: #a855f7;
      text-shadow: 0 0 10px rgba(168, 85, 247, 0.5);
      position: relative;
    }
    
    /* Decorative element for title */
    .title::after {
      content: "";
      display: block;
      width: 60px;
      height: 3px;
      background: linear-gradient(90deg, transparent, #a855f7, transparent);
      margin: 8px auto 0;
      border-radius: 3px;
    }
    
    .form {
      display: flex;
      flex-direction: column;
      gap: 1.5rem;
    }
    
    .input-group {
      position: relative;
      display: flex;
      flex-direction: column;
      gap: 0.5rem;
    }
    
    .input-group label {
      font-size: 0.9rem;
      color: #d8b4fe;
      font-weight: 500;
      margin-left: 0.25rem;
    }
    
    .input-group input {
      background: rgba(15, 15, 15, 0.8);
      border: 1px solid rgba(128, 0, 255, 0.3);
      border-radius: 8px;
      padding: 0.8rem 1rem;
      color: white;
      font-size: 1rem;
      transition: all 0.3s ease;
    }
    
    .input-group input:focus {
      outline: none;
      border-color: #a855f7;
      box-shadow: 0 0 0 3px rgba(168, 85, 247, 0.2);
    }
    
    .forgot {
      margin-top: 0.25rem;
      text-align: right;
    }
    
    .forgot a {
      color: #d8b4fe;
      font-size: 0.85rem;
      text-decoration: none;
      transition: color 0.3s ease;
    }
    
    .forgot a:hover {
      color: #a855f7;
      text-decoration: underline;
    }
    
    .sign {
      background: linear-gradient(135deg, #a855f7 0%, #7e22ce 100%);
      color: white;
      border: none;
      border-radius: 8px;
      padding: 0.8rem;
      font-size: 1rem;
      font-weight: 600;
      cursor: pointer;
      transition: all 0.3s ease;
      margin-top: 0.5rem;
      position: relative;
      overflow: hidden;
    }
    
    .sign::before {
      content: "";
      position: absolute;
      top: 0;
      left: -100%;
      width: 100%;
      height: 100%;
      background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
      transition: all 0.5s ease;
    }
    
    .sign:hover {
      background: linear-gradient(135deg, #9333ea 0%, #6b21a8 100%);
      transform: translateY(-2px);
      box-shadow: 0 4px 12px rgba(168, 85, 247, 0.4);
    }
    
    .sign:hover::before {
      left: 100%;
    }
    
    .social-message {
      display: flex;
      align-items: center;
      margin: 1.5rem 0;
    }
    
    .line {
      flex-grow: 1;
      height: 1px;
      background: rgba(168, 85, 247, 0.3);
    }
    
    .message {
      padding: 0 1rem;
      color: #d8b4fe;
      font-size: 0.9rem;
    }
    
    .social-icons {
      display: flex;
      justify-content: center;
      gap: 1rem;
      margin-bottom: 1.5rem;
    }
    
    .icon {
      display: flex;
      align-items: center;
      justify-content: center;
      width: 3rem;
      height: 3rem;
      border-radius: 50%;
      background: rgba(20, 20, 20, 0.8);
      border: 1px solid rgba(168, 85, 247, 0.3);
      cursor: pointer;
      transition: all 0.3s ease;
      position: relative;
      overflow: hidden;
    }
    
    .icon::before {
      content: "";
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: radial-gradient(circle at center, rgba(168, 85, 247, 0.3) 0%, transparent 70%);
      opacity: 0;
      transition: opacity 0.3s ease;
    }
    
    .icon:hover {
      transform: translateY(-3px);
      box-shadow: 0 4px 12px rgba(168, 85, 247, 0.3);
      border-color: rgba(168, 85, 247, 0.6);
    }
    
    .icon:hover::before {
      opacity: 1;
    }
    
    .icon svg {
      width: 1.5rem;
      height: 1.5rem;
      fill: #d8b4fe;
      position: relative;
      z-index: 1;
      transition: fill 0.3s ease;
    }
    
    .icon:hover svg {
      fill: #a855f7;
    }
    
    .signup {
      text-align: center;
      color: #d8b4fe;
      font-size: 0.9rem;
    }
    
    .signup a {
      color: #a855f7;
      font-weight: 600;
      text-decoration: none;
      transition: color 0.3s ease;
    }
    
    .signup a:hover {
      text-decoration: underline;
    }
    
    .error-message {
      color: #f87171;
      text-align: center;
      font-size: 0.9rem;
      padding: 0.5rem;
      background: rgba(248, 113, 113, 0.1);
      border-radius: 6px;
      margin-top: 0.5rem;
    }
    
    /* Responsive adjustments */
    @media (max-width: 480px) {
      .form-container {
        padding: 2rem 1.5rem;
      }
      
      .title {
        font-size: 1.75rem;
      }
    }

    .firefly-container {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      pointer-events: none;
      overflow: hidden;
      z-index: 0;
    }
    
    .firefly {
      position: absolute;
      width: 8px;
      height: 8px;
      background: radial-gradient(circle, #a259ff 0%, #9c27b0 70%, transparent 100%);
      border-radius: 50%;
      opacity: 0.8;
      animation: moveFirefly 20s linear infinite, glow 2s ease-in-out infinite alternate;
    }
    #particles {
      position: fixed;
      top: 0;
      left: 0;
      z-index: -1;
      width: 100%;
      height: 100%;
    }
    
    
    @keyframes moveFirefly {
      0% {
        transform: translate(0, 0);
      }
      100% {
        transform: translate(calc(100vw - 20px), calc(100vh - 20px));
      }
    }
    
    @keyframes glow {
      0% {
        box-shadow: 0 0 4px #e040fb, 0 0 10px #a259ff;
        opacity: 0.6;
      }
      100% {
        box-shadow: 0 0 10px #e040fb, 0 0 20px #a259ff;
        opacity: 1;
      }
    }
    
  </style>
</head>
<body>
  <div class="form-container">
    <p class="title">Login</p>
    <form class="form" action="/login" method="POST">
      <div class="input-group">
        <label for="username">Username</label>
        <input type="text" name="username" id="username" placeholder="Enter your username" required>
      </div>
      <div class="input-group">
        <label for="password">Password</label>
        <input type="password" name="password" id="password" placeholder="Enter your password" required>
        <div class="forgot">
          <a rel="noopener noreferrer" href="#">Forgot Password?</a>
        </div>
      </div>
      <% if (error) { %>
        <div class="error-message"><%= error %></div>
      <% } %>
      <button type="submit" class="sign">Sign in</button>
    </form>
    <div class="social-message">
      <div class="line"></div>
      <p class="message">Login with social accounts</p>
      <div class="line"></div>
    </div>
    <div class="social-icons">
      <button aria-label="Log in with Google" class="icon">
        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32" class="w-5 h-5 fill-current">
          <path d="M16.318 13.714v5.484h9.078c-0.37 2.354-2.745 6.901-9.078 6.901-5.458 0-9.917-4.521-9.917-10.099s4.458-10.099 9.917-10.099c3.109 0 5.193 1.318 6.38 2.464l4.339-4.182c-2.786-2.599-6.396-4.182-10.719-4.182-8.844 0-16 7.151-16 16s7.156 16 16 16c9.234 0 15.365-6.49 15.365-15.635 0-1.052-0.115-1.854-0.255-2.651z"></path>
        </svg>
      </button>
      <button aria-label="Log in with Twitter" class="icon">
        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32" class="w-5 h-5 fill-current">
          <path d="M31.937 6.093c-1.177 0.516-2.437 0.871-3.765 1.032 1.355-0.813 2.391-2.099 2.885-3.631-1.271 0.74-2.677 1.276-4.172 1.579-1.192-1.276-2.896-2.079-4.787-2.079-3.625 0-6.563 2.937-6.563 6.557 0 0.521 0.063 1.021 0.172 1.495-5.453-0.255-10.287-2.875-13.52-6.833-0.568 0.964-0.891 2.084-0.891 3.303 0 2.281 1.161 4.281 2.916 5.457-1.073-0.031-2.083-0.328-2.968-0.817v0.079c0 3.181 2.26 5.833 5.26 6.437-0.547 0.145-1.131 0.229-1.724 0.229-0.421 0-0.823-0.041-1.224-0.115 0.844 2.604 3.26 4.5 6.14 4.557-2.239 1.755-5.077 2.801-8.135 2.801-0.521 0-1.041-0.025-1.563-0.088 2.917 1.86 6.36 2.948 10.079 2.948 12.067 0 18.661-9.995 18.661-18.651 0-0.276 0-0.557-0.021-0.839 1.287-0.917 2.401-2.079 3.281-3.396z"></path>
        </svg>
      </button>
      <button aria-label="Log in with GitHub" class="icon">
        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32" class="w-5 h-5 fill-current">
          <path d="M16 0.396c-8.839 0-16 7.167-16 16 0 7.073 4.584 13.068 10.937 15.183 0.803 0.151 1.093-0.344 1.093-0.772 0-0.38-0.009-1.385-0.015-2.719-4.453 0.964-5.391-2.151-5.391-2.151-0.729-1.844-1.781-2.339-1.781-2.339-1.448-0.989 0.115-0.968 0.115-0.968 1.604 0.109 2.448 1.645 2.448 1.645 1.427 2.448 3.744 1.74 4.661 1.328 0.14-1.031 0.557-1.74 1.011-2.135-3.552-0.401-7.287-1.776-7.287-7.907 0-1.751 0.62-3.177 1.645-4.297-0.177-0.401-0.719-2.031 0.141-4.235 0 0 1.339-0.427 4.4 1.641 1.281-0.355 2.641-0.532 4-0.541 1.36 0.009 2.719 0.187 4 0.541 3.043-2.068 4.381-1.641 4.381-1.641 0.859 2.204 0.317 3.833 0.161 4.235 1.015 1.12 1.635 2.547 1.635 4.297 0 6.145-3.74 7.5-7.296 7.891 0.556 0.479 1.077 1.464 1.077 2.959 0 2.14-0.020 3.864-0.020 4.385 0 0.416 0.28 0.916 1.104 0.755 6.4-2.093 10.979-8.093 10.979-15.156 0-8.833-7.161-16-16-16z"></path>
        </svg>
      </button>
    </div>
    <p class="signup">Don't have an account?
      <a rel="noopener noreferrer" href="#">Sign up</a>
    </p>
  </div>
  <div class="firefly-container"></div>
  <canvas id="particles"></canvas>

  <script>
    const canvas = document.getElementById('particles');
    const ctx = canvas.getContext('2d');
    let particles = [];
  
    // Resize canvas to fit screen
    function resizeCanvas() {
      canvas.width = window.innerWidth;
      canvas.height = window.innerHeight;
    }
    resizeCanvas();
    window.addEventListener('resize', resizeCanvas);
  
    class Particle {
      constructor(x, y, radius, dx, dy) {
        this.x = x;
        this.y = y;
        this.radius = radius;
        this.dx = dx;
        this.dy = dy;
      }
  
      draw() {
        ctx.beginPath();
        ctx.arc(this.x, this.y, this.radius, 0, Math.PI * 2, false);
        ctx.fillStyle = 'rgba(168, 85, 247, 0.2)';
        ctx.fill();
        ctx.closePath();
      }
  
      update(particles) {
        this.x += this.dx;
        this.y += this.dy;
  
        // Wall bounce
        if (this.x + this.radius > canvas.width || this.x - this.radius < 0) this.dx = -this.dx;
        if (this.y + this.radius > canvas.height || this.y - this.radius < 0) this.dy = -this.dy;
  
        // Particle collision
        for (let i = 0; i < particles.length; i++) {
          const other = particles[i];
          if (this === other) continue;
  
          const dx = other.x - this.x;
          const dy = other.y - this.y;
          const dist = Math.sqrt(dx * dx + dy * dy);
  
          if (dist < this.radius + other.radius) {
            // Simple bounce: swap velocities
            const tempDx = this.dx;
            const tempDy = this.dy;
            this.dx = other.dx;
            this.dy = other.dy;
            other.dx = tempDx;
            other.dy = tempDy;
          }
        }
  
        this.draw();
      }
    }
  
    // Initialize particles
    function initParticles(num) {
      particles = [];
      for (let i = 0; i < num; i++) {
        let radius = 3 + Math.random() * 2;
        let x = Math.random() * (canvas.width - radius * 2) + radius;
        let y = Math.random() * (canvas.height - radius * 2) + radius;
        let dx = (Math.random() - 0.5) * 2;
        let dy = (Math.random() - 0.5) * 2;
        particles.push(new Particle(x, y, radius, dx, dy));
      }
    }
  
    function animate() {
      requestAnimationFrame(animate);
      ctx.clearRect(0, 0, canvas.width, canvas.height);
      particles.forEach(p => p.update(particles));
    }
  
    initParticles(40); // You can adjust particle count here
    animate();
  </script>
  
  

</body>
</html>