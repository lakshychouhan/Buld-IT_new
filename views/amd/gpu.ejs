<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Choose GPU - Build-IT</title>
  <link href="https://fonts.googleapis.com/css2?family=JetBrains+Mono:wght@300;600&display=swap" rel="stylesheet">
  <script src="https://kit.fontawesome.com/ae8f1db1af.js" crossorigin="anonymous"></script>
  <style>
    /* Global Styles */
    body {
      margin: 0;
      padding: 0;
      background: black;
      color: white;
      font-family: 'JetBrains Mono', monospace;
    }
    /* Topbar / Header */
    header {
      background: linear-gradient(to right, rgba(0,0,0,0.95), rgba(70,60,111,0.95));
      padding: 1rem 2rem;
      position: fixed;
      width: 100%;
      top: 0;
      z-index: 1000;
      box-shadow: 0 2px 15px rgba(138,43,226,0.2);
      backdrop-filter: blur(8px);
    }
    .flex-container-left {
      display: flex;
      align-items: center;
      gap: 3rem;
      max-width: 1200px;
      margin: 0 auto;
    }
    .product-name a {
      text-decoration: none;
      display: flex;
      align-items: center;
    }
    .product-name h3 {
      font-size: 1.8rem;
      margin: 0;
      background: linear-gradient(45deg, #8A2BE2, #4B0082);
      -webkit-background-clip: text;
      background-clip: text;
      -webkit-text-fill-color: transparent;
      position: relative;
    }
    .product-name h3::after {
      content: '';
      position: absolute;
      bottom: -5px;
      left: 0;
      width: 100%;
      height: 2px;
      background: linear-gradient(90deg, #8A2BE2, transparent);
    }
    /* Main Container */
    .container {
      max-width: 1200px;
      margin: 6rem auto 2rem;
      padding: 2rem;
      text-align: center;
    }
    /* Search Section */
    .search-container {
      margin-bottom: 2rem;
    }
    .search-box {
      width: 50%;
      padding: 1rem;
      border-radius: 25px;
      border: none;
      outline: none;
      font-size: 1rem;
      text-align: center;
      background: rgba(255,255,255,0.1);
      color: white;
      margin-right: 1rem;
    }
    .select-btn {
      background: #463C6F;
      color: white;
      padding: 0.8rem 1.5rem;
      border: none;
      border-radius: 25px;
      cursor: pointer;
      transition: transform 0.3s ease;
    }
    .select-btn:hover {
      transform: scale(1.05);
    }
    /* GPU Cards Layout */
    .gpu-list {
      display: flex;
      flex-wrap: wrap;
      justify-content: center;
      gap: 2rem;
      margin-top: 2rem;
    }
    .gpu-card {
      background: rgba(255,255,255,0.1);
      padding: 1.5rem;
      border-radius: 15px;
      width: 300px;
      text-align: center;
      transition: transform 0.3s ease;
    }
    .gpu-card:hover {
      transform: scale(1.05);
      box-shadow: 0 4px 10px rgba(138,43,226,0.3);
    }
    .gpu-card h3 {
      color: #8A2BE2;
      margin-bottom: 0.5rem;
    }
    .gpu-card h3 a {
      text-decoration: none;
      color: inherit;
    }
    .gpu-card p {
      color: #ccc;
      font-size: 0.9rem;
      margin-bottom: 1rem;
    }
  </style>
</head>
<body>
  <!-- Header -->
  <header>
    <nav class="topbar">
      <div class="flex-container-left">
        <span class="product-name">
          <a href="/">
            <h3>Build<span style="color: white;">-IT</span></h3>
          </a>
        </span>
      </div>
    </nav>
  </header>

  <!-- Main Container -->
  <div class="container">
    <h1>Choose GPU</h1>
    <div class="search-container">
      <input type="text" id="search" class="search-box" placeholder="Search Component">
      <input type="button" id="search-exec" class="select-btn" value="Search" onclick="filter()">
    </div>
    <div class="filter-container">
      <label for="vram-filter">Filter by VRAM:</label>
      <select id="vram-filter" class="select-btn" onchange="filterByVram()">
        <option value="all">All</option>
        <option value="4">4 GB</option>
        <option value="6">6 GB</option>
        <option value="8">8 GB</option>
        <option value="10">10 GB</option>
        <option value="11">11 GB</option>
        <option value="16">16 GB</option>
      </select>
    </div>
    <div class="gpu-list" id="search-elements">
      <% gpu.videoCard.forEach(element => { %>
        <% if (element.core_clock != undefined && element.vram.total >= 4000000000 && element.core_clock.cycles >= 1392000000 && !element.chipset.includes("Quadro") && !element.chipset.includes("Titan")) { %>
          <div class="gpu-card" data-vram="<%= element.vram.total / 1000000000 %>">
            <h3>
              <a href="gpu/<%= element.brand %> <%= element.chipset %>/coolers">
                <%= element.brand %> <%= element.chipset %>
              </a>
            </h3>
            <% if (element.price[1] != "0.00") { %>
              <p class="price">â‚¹<%= Math.round(parseFloat(element.price[1]) * 74.3) %></p>
            <% } else { %>
              <p class="price">Price: NA</p>
            <% } %>
            <p class="details">
              VRAM: <%= element.vram.total / 1000000000 %> GB
            </p>
          </div>
          
        <% } %>
      <% }); %>
      
    </div>
  </div>

  <script>
    function filter() {
      var input = document.getElementById('search');
      var filter = input.value.toUpperCase();
      var gpuList = document.getElementById('search-elements');
     
      var gpuCards = gpuList.getElementsByClassName('gpu-card');
      for (var i = 0; i < gpuCards.length; i++) {
        var a = gpuCards[i].getElementsByTagName('a')[0];
        var txtValue = a.textContent || a.innerText;
        if (txtValue.toUpperCase().indexOf(filter) > -1) {
          gpuCards[i].style.display = "block";
        } else {
          gpuCards[i].style.display = "none";
        }
      }
    }
    function filterByVram() {
      var vramFilter = document.getElementById('vram-filter').value;
      var gpuCards = document.getElementsByClassName('gpu-card');
    
      for (var i = 0; i < gpuCards.length; i++) {
        var vramValue = gpuCards[i].getAttribute('data-vram'); // Read the data-vram attribute
        if (vramFilter === "all" || vramValue === vramFilter) {
          gpuCards[i].style.display = "block";
        } else {
          gpuCards[i].style.display = "none";
        }
      }
    }
    
    
  </script>
</body>
</html>
